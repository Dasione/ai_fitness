# 定义日志格式
log_format debug_log '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'upstream_addr="$upstream_addr" '
                    'upstream_status="$upstream_status" '
                    'request_time=$request_time';

server {
    listen 80;
    server_name localhost;

    # 错误日志配置
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    access_log /var/log/nginx/debug.log debug_log;

    root /usr/share/nginx/html;
    index index.html;

    # 处理前端路由
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API 请求转发到后端服务
    location /api {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;

        # 添加调试头
        add_header X-Debug-Message "Proxying to backend" always;
        add_header X-Request-ID $request_id always;
    }

    # WebSocket 连接转发
    location /socket.io {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # 视频处理服务WebSocket代理
    location /ws {
        proxy_pass http://processor:8765;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        # 添加调试头
        add_header X-Debug-Message "Proxying to processor" always;
        add_header X-Request-ID $request_id always;
    }

    # 视频文件代理
    location /uploads {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;

        # 添加调试头
        add_header X-Debug-Message "Proxying uploads to backend" always;
        add_header X-Request-ID $request_id always;
    }

    # 缩略图代理
    location /public/uploads {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;

        # 添加调试头
        add_header X-Debug-Message "Proxying public uploads to backend" always;
        add_header X-Request-ID $request_id always;
    }

    # 头像文件代理
    location ~ ^/(?:uploads|public/uploads)/.*\.(jpg|jpeg|png|gif|webp|svg)$ {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;

        # 添加调试头
        add_header X-Debug-Message "Proxying image to backend" always;
        add_header X-Request-ID $request_id always;
    }

    # 参考视频和缩略图代理
    location /uploads/reference {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # 添加错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;

        # 添加调试头
        add_header X-Debug-Message "Proxying reference to backend" always;
        add_header X-Request-ID $request_id always;
    }
} 